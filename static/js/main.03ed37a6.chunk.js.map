{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isErrorIn","setInputToState","target","name","value","setState","isUrlValid","url","RegExp","test","isCurrentInputValid","trim","length","isAllInputsFilled","checkAllInputsValidity","createNewMovieCard","movieCard","resetState","onAdd","this","props","placeholder","onChange","event","onBlur","hidden","type","disabled","onClick","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03ed37a6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorIn: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n  };\n\n  setInputToState = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  }\n\n  isUrlValid = (url) => {\n    // eslint-disable-next-line max-len\n    const urlValidity = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    return urlValidity.test(url);\n  }\n\n  isCurrentInputValid = ({ target }) => {\n    const { name } = target;\n\n    switch (name) {\n      case 'description': break;\n\n      case 'title':\n      case 'imdbId':\n        this.setState(state => ({\n          ...state,\n          isErrorIn: {\n            ...state.isErrorIn,\n            [name]: state[name].trim().length === 0,\n          },\n        }));\n        break;\n\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState(state => ({\n          ...state,\n          isErrorIn: {\n            ...state.isErrorIn,\n            [name]: !this.isUrlValid(state[name]),\n          },\n        }));\n        break;\n\n      default: break;\n    }\n  }\n\n  isAllInputsFilled = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (title && imgUrl && imdbUrl && imdbId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  checkAllInputsValidity = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.isErrorIn;\n\n    if (!title && !imgUrl && !imdbUrl && !imdbId && this.isAllInputsFilled()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  createNewMovieCard = () => {\n    const movieCard = {};\n\n    movieCard.title = this.state.title;\n    movieCard.description = this.state.description;\n    movieCard.imgUrl = this.state.imgUrl;\n    movieCard.imdbUrl = this.state.imdbUrl;\n    movieCard.imdbId = this.state.imdbId;\n\n    return movieCard;\n  }\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isErrorIn: {\n        title: false,\n        description: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n    });\n  }\n\n  render() {\n    const movieCardKeys = [\n      'title', 'description', 'imgUrl', 'imdbUrl', 'imdbId',\n    ];\n\n    const { onAdd } = this.props;\n\n    return (\n      <form>\n        {movieCardKeys.map((key) => {\n          return (\n            <>\n              <label key={key}>\n                <input\n                  name={key}\n                  value={this.state[key]}\n                  placeholder={key}\n                  className={this.state.isErrorIn[key] ? 'error' : null}\n                  onChange={event => this.setInputToState(event)}\n                  onBlur={event => this.isCurrentInputValid(event)}\n                />\n              </label>\n              <p hidden={!this.state.isErrorIn[key]}>\n                {`Please enter correct ${key}`}\n              </p>\n            </>\n          );\n        })}\n        <button\n          type=\"button\"\n          className={!this.checkAllInputsValidity() ? 'disabled' : null}\n          disabled={!this.checkAllInputsValidity()}\n          onClick={() => {\n            onAdd(this.createNewMovieCard());\n            this.resetState();\n          }}\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}