{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","movieCardFields","NewMovie","state","isErrorIn","isFormValid","setInputToState","target","name","value","setState","isUrlValid","url","RegExp","test","isCurrentInputValid","trim","length","isAllInputsFilled","isAllInputsValid","showErrors","filter","field","forEach","handleSubmit","event","preventDefault","onAdd","props","createNewMovieCard","resetState","placeholder","onChange","onBlur","hidden","type","this","disabled","onClick","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.660c7357.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\n\nconst movieCardFields = [\n  'title', 'description', 'imgUrl', 'imdbUrl', 'imdbId',\n];\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorIn: {\n      title: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    },\n    isFormValid: true,\n  };\n\n  setInputToState = ({ target }) => {\n    const { name, value } = target;\n\n    this.setState({ [name]: value });\n  }\n\n  isUrlValid = (url) => {\n    // eslint-disable-next-line max-len\n    const urlValidity = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    return urlValidity.test(url);\n  }\n\n  isCurrentInputValid = ({ target }) => {\n    const { name } = target;\n\n    switch (name) {\n      case 'description': break;\n\n      case 'title':\n      case 'imdbId':\n        this.setState(state => ({\n          ...state,\n          isErrorIn: {\n            ...state.isErrorIn,\n            [name]: state[name].trim().length === 0,\n          },\n        }));\n        break;\n\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState(state => ({\n          ...state,\n          isErrorIn: {\n            ...state.isErrorIn,\n            [name]: !this.isUrlValid(state[name]),\n          },\n        }));\n        break;\n\n      default: break;\n    }\n  }\n\n  isAllInputsFilled = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (title.length && imgUrl.length && imdbUrl.length && imdbId.length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isAllInputsValid = () => {\n    const { title, imgUrl, imdbUrl, imdbId } = this.state.isErrorIn;\n\n    if (!title && !imgUrl && !imdbUrl && !imdbId) {\n      return true;\n    }\n\n    return false;\n  }\n\n  isFormValid = () => {\n    if (this.isAllInputsValid() && this.isAllInputsFilled()) {\n      this.setState({ isFormValid: true });\n\n      return true;\n    }\n\n    this.setState({ isFormValid: false });\n\n    return false;\n  }\n\n  showErrors =() => {\n    if (this.state.isFormValid) {\n      const fields = movieCardFields.filter(field => field !== 'description');\n\n      fields.forEach((field) => {\n        if (!this.state[field].length && !this.state.isErrorIn[field]) {\n          this.setState(state => ({\n            ...state,\n            isErrorIn: {\n              ...state.isErrorIn,\n              [field]: true,\n            },\n          }));\n        }\n      });\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { onAdd } = this.props;\n\n    if (this.isFormValid()) {\n      onAdd(this.createNewMovieCard());\n      this.resetState();\n    } else {\n      this.showErrors();\n    }\n  }\n\n  createNewMovieCard = () => {\n    return {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n  }\n\n  resetState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      isErrorIn: {\n        title: false,\n        description: false,\n        imgUrl: false,\n        imdbUrl: false,\n        imdbId: false,\n      },\n      isFormValid: true,\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        {movieCardFields.map((field) => {\n          return (\n            <div key={field}>\n              <label>\n                <input\n                  name={field}\n                  value={this.state[field]}\n                  placeholder={field}\n                  className={this.state.isErrorIn[field] ? 'error' : null}\n                  onChange={(event) => {\n                    this.setInputToState(event);\n                  }}\n                  onBlur={(event) => {\n                    this.isCurrentInputValid(event);\n                  }}\n                />\n              </label>\n              <p hidden={!this.state.isErrorIn[field]}>\n                {`Please enter correct ${field}`}\n              </p>\n            </div>\n          );\n        })}\n        <button\n          type=\"submit\"\n          className={!this.isAllInputsValid() ? 'disabled' : null}\n          disabled={!this.isAllInputsValid()}\n          onClick={(event) => {\n            this.handleSubmit(event);\n          }}\n        >\n          Add Movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}